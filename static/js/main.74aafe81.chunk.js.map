{"version":3,"sources":["components/organisms/Banner.jsx","components/atoms/CartCounter.jsx","components/organisms/MainMenu.jsx","components/molecules/CardProduct.jsx","redux/actionsCreators.js","redux/actions.js","components/organisms/GridProducts.jsx","components/AppRoutes.jsx","redux/store.js","components/App.jsx","serviceWorker.js","index.js"],"names":["Banner","react_default","a","createElement","className","id","src","alt","type","placeholder","connect","state","cartLegth","cart","length","_ref","concat","MainMenu","createRef","atoms_CartCounter","CourseProduct","title","image","addCourseToCart","deleteCourseFromCart","find","onClick","defaultProps","dispatch","addToCart","deleteFromCart","objProducts","price","cursoLink","GridProducts","map","c","CardProduct","key","AppRoutes","Fragment","organisms_MainMenu","organisms_Banner","organisms_GridProducts","initialStore","createStore","arguments","undefined","action","_objectSpread","filter","App","es","store","components_AppRoutes","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74aafe81.chunk.js","sourcesContent":["import React from 'react';\n\nconst Banner = () =>(\n    <div className=\"main-banner img-container diagonal l-section\" id=\"main-banner\">\n        <div className=\"ed-grid lg-grid-6\">\n            <div className=\"lg-cols-4 lg-x-2\">\n                <img className=\"main-banner__img\" src=\"img/banner-img.png\" alt=\"alt-Banner\"/>\n                <div className=\"main-banner__data s-center\">\n                    <p className=\"t2 s-mb-0\">Shopping Card Emulator</p>\n                    <p>New fashion trends</p>\n                    <input className=\"nav-input\" type=\"text\" placeholder=\"Explore Products\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Banner;\n","import React from \"react\"\nimport { connect } from \"react-redux\"\n\n\nconst CartCounter = ({cartLegth}) => (\n    <li className=\"s-card\">\n        <i className=\"fas fa-cart-arrow-down\"></i>\n        <span className=\"s-card__number\"> {`${cartLegth}`} </span>\n    </li>\n)\n\nconst mapStateToProps = state => (\n    {\n        cartLegth: state.cart.length\n    }\n)\n\nexport default connect(mapStateToProps)(CartCounter)","import React, {createRef} from 'react'\nimport CartCounter from '../atoms/CartCounter'\n\nconst menu = createRef()\nconst toggleMenu = ()=> menu.current.classList.toggle('show');\n\nconst MainMenu = () => (\n    <header className=\"main-header\">\n        <div className=\"ed-grid s-grid-5 lg-grid-4\">\n            <div className=\"s-cols-4 lg-cols-1 s-cross-center\">\n                    {/*<img className=\"main-logo\" src=\"img/logo.png\" alt=\"algo\" />*/}\n                <nav>\n                    <CartCounter/>\n                </nav>\n            </div>\n\n        </div>\n    </header>\n);\n\nexport default MainMenu\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { addToCart, deleteFromCart } from '../../redux/actionsCreators';\nimport { connect } from \"react-redux\"\n\nconst CourseProduct =({id, title, image, addCourseToCart, cart,deleteCourseFromCart}) =>(\n    <article className=\"card\" id={title}>\n        <div className=\"img-container s-ratio-16-9 s-radius-tr s-radius-tl\">\n            <img src={image} alt={title} />\n        </div>\n        <div className=\"card__data s-border s-radius-br s-radius-bl s-pxy-2\">\n            <h3 className=\"t5 s-mb-2 s-center\">{title}</h3>\n            <div className=\"s-main-center\">\n                {\n                    cart.find(a => a === id)\n                        ?<button\n                        className=\"button--ghost-alert button--tiny\"\n                        onClick = {() => deleteCourseFromCart(id)}\n                    >\n                        Remove Card\n                    </button>\n                        :<button\n                        className=\"button--ghost-alert button--tiny\"\n                        onClick = {() => addCourseToCart(id)}\n                    >\n                        Add to Car\n                    </button>\n                }\n\n            </div>\n        </div>\n    </article>\n);\n\nCourseProduct.propTypes = {\n    title           : PropTypes.string,\n    image           : PropTypes.string\n};\n\nCourseProduct.defaultProps = {\n    title           : \"No titles\",\n    image           : \"https://scott88lee.github.io/FMX/img/avatar.jpg\"\n};\n\n\n\n\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addCourseToCart(id){\n        dispatch(addToCart(id))\n    },\n    deleteCourseFromCart(id){\n        dispatch(deleteFromCart(id))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseProduct)","import { ADD_TO_CART, DELETE_FROM_CART } from \"./actions\"\n\nconst addToCart = (id) =>({\n    type: ADD_TO_CART,\n    id: id\n});\n\nconst deleteFromCart = (id) =>({\n    type: DELETE_FROM_CART,\n    id: id\n});\n\nexport {addToCart, deleteFromCart} ","export const ADD_TO_CART = \"ADD_TO_CART\"\nexport const DELETE_FROM_CART = \"DELETE_FROM_CART\"","import React from \"react\"\nimport CardProduct from \"../molecules/CardProduct\"\n\n//Array\nconst objProducts = [\n    {\n        id              :1,\n        title           : \"title1\",\n        image           : \"img/img1.jpg\",\n    },\n    {\n        id              :2,\n        title           : \"title2\",\n        image           : \"img/img2.jpg\",\n        price           : \"100\",\n        cursoLink       : \"https://www.google.com\"\n    },\n    {\n        id              :3,\n        title           : \"title3\",\n        image           : \"img/img3.jpg\",\n        price           : \"150\",\n        cursoLink       : \"https://www.google.com\"\n    },\n    {\n        id              :4,\n        title           : \"title4\",\n        image           : \"img/img4.jpg\",\n    },\n    {\n        id              :5,\n        title           : \"title5\",\n        image           : \"img/img3.jpg\",\n    },\n    {\n        id              :6,\n        title           : \"title6\",\n        image           : \"img/img4.jpg\",\n    },\n    {\n        id              :7,\n        title           : \"title7\",\n        image           : \"img/img1.jpg\",\n    },\n    {\n        id              :8,\n        title           : \"title8\",\n        image           : \"img/img2.jpg\",\n    }\n];\n\nconst GridProducts = () => (\n    <div className=\"ed-grid s-grid-2 m-grid-3 l-grid-4\">\n        {\n            objProducts.map( c => < CardProduct\n                key             = {c.id             }\n                id              = {c.id             }\n                title           = {c.title          }\n                image           = {c.image          }\n            />)\n        }\n    </div>\n);\n\nexport default GridProducts","import React from \"react\"\nimport Banner from './organisms/Banner'\nimport Mainmenu from './organisms/MainMenu'\nimport GridProducts from './organisms/GridProducts'\n\nconst AppRoutes = () => (\n    <>\n        <Mainmenu/>\n        <Banner/>\n        <GridProducts/>\n    </>\n\n);\n\nexport default AppRoutes;","import { createStore } from 'redux'\nimport { ADD_TO_CART, DELETE_FROM_CART } from './actions'\n\nconst initialStore = {\n    cart : []\n};\n\nconst rootReducer = (state = initialStore, action)=>{\n    if(action.type === ADD_TO_CART){\n        if (state.cart.find(a => a === action.id)) return state\n        return {\n            ...state,\n            cart: state.cart.concat(action.id)\n        }\n    }\n    // console.log(action.type, action.id)\n    if (action.type === DELETE_FROM_CART) {\n        return{\n            ...state,\n            cart: state.cart.filter(c => c !== action.id)\n        }\n    }\n    \n    return state\n}\n\nexport default createStore(rootReducer)","import React from 'react';\nimport AppRoutes from './AppRoutes'\nimport {Provider} from 'react-redux'\nimport store from '../redux/store'\nimport '../styles/styles.scss';\n\nconst App = ()=> (\n    <Provider store ={store}>\n        <AppRoutes/>\n    </Provider>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}